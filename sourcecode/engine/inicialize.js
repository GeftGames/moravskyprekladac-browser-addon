const languagesPackage = "/engine/v3.json"; //"https://raw.githubusercontent.com/GeftGames/moravskyprekladac/main/v1.trw_a";
let loadedversion = "TW 3";
var dev=false;
var currentLang;
var languagesList = [];

let translations = [
    "Morava", [
        "Slov√°cko", [
            	"Podlu≈æ√≠",
            	"Hor≈à√°cko",
            	"Han√°ck√© Slov√°cko",
                "Dol≈à√°cko",
                "Moravsk√© Kopanice",
                "Luhaƒçovick√© Z√°les√≠",
        ],

        "Vala≈°sko", [
            "Uherskohradi≈°≈•sk√© Z√°vr≈°√≠",
            "Pod≈ôevnicko",
            "Vsacko",
            "Mezi≈ô√≠ƒçsko",
            "Klouboukovsko",
            "Vset√≠nsko",
            "Vizovicko",
        ],

        "Moravsk√© Hor√°cko", [
            "Hor√°cko", [],
            "Podhor√°cko", [],
            "Mal√° han√°",
            "Hor√°ck√© Dolsko",
        ],

        "Blansko", [

        ],

        "Han√°", [
            "Z√°beƒçv√≠",
            "Ji≈æn√≠ Han√°",
            "Vy≈°kovsko",
            "St≈ôedn√≠ Han√°",
            "ƒåuh√°cko",
            "Bla≈•√°cko",
            "Litovelsko",
            "Horn√≠ Han√°",
        ],

        "Hranicko",
        "Pobeƒçv√≠",
        "≈†umpersko",

        "Z√°ho≈ô√≠", [
            "Keleƒçsko",
            "Host√Ωnsk√© Z√°ho≈ô√≠",
            "Lipe≈àsk√© Z√°ho≈ô√≠",
        ],

        "Drahansko", [],
        "H≈ôebeƒçsko",
        "La≈°sko", [],
        "Krava≈ôsko", [],        
        "Jesenicko", [],
        "Brnƒõnsko",
    ],

    "Slezsko", [
        "Zaol≈°√≠", [],        
        "Goralsko", [],
        "Hluƒç√≠nsko", [],
        "Opavsko", [],
        "La≈°sko", []
    ],

    "Moravsk√Ω jazyk",

    "Ostatn√≠"
];

function translator_init() {
    loadedLangs=0;
    if (dev) console.log("Translator inicializating starting...");
    
    transcription = SetCurrentTranscription(transcriptionType);

    InnerSearch(translations, langArrEleOptions, 0);
    GetTranslations();

    function InnerSearch(arr, parent, level) {
        if (typeof arr === 'string') {
            let group = {};
                group.Name = arr;
                group.type="Category";
                group.items=[];
                group.className = "selectGroup" + level;
            parent.items.push(group);
            return;
        }
        for (const name of arr) {
            if (typeof name === 'string') {
                group = {
                    Name: name,
                    type: "Category",
                    items: [],
                    className: "selectGroup" + level,
                };
                
                parent.items.push(group);
            } else {
                if (Array.isArray(name)) InnerSearch(name, parent, level + 1);
            }
        }
    }
}

let totalDirFiles = -1;
let downloadedFiles = 0;

var sSimpleWord=[], sPhrase=[], sSentence=[], sSentencePart=[], sSentencePattern=[],sSentencePatternPart=[],
sReplaceS=[], sReplaceG=[], sReplaceE=[],
sPatternNounFrom=[], sPatternNounTo=[],
sPatternAdjectiveFrom=[],sPatternAdjectiveTo=[],
sPatternPronounFrom=[],sPatternPronounTo=[],
sPatternNumberFrom=[],sPatternNumberTo=[],
sPatternVerbFrom=[],sPatternVerbTo=[],
sAdverb=[],sPreposition=[],sConjunction=[],sParticle=[],sInterjection=[];

function GetTranslations() {
   // loadedLangs=0;
    
    if (dev) console.log("Downloading file", chrome.runtime.getURL(languagesPackage));

    function RegisterLang(content, id) {
        //console.log(content);
        let lines = content.split(/\r?\n/);

        if (lines.length < 10) {
            if (dev) console.warn("Downloaded twr seems too small");
            return;
        }

        let tr = new LanguageTr();
       // tr.fileName = fileName;
        tr.id=id;

        tr.Load(lines);
        if (tr.Name!='Morav≈°tina "spisovn√°"') AddLang(tr);
       // console.log(tr.Name);
    }   
    
    function AddLang(lang) {
        function insideSearch(list, cat) {
            for (let n of list.items) {
                if (n.type == "Category") {
                    if (n.Name == cat) {
                        return n;
                    }
                }
            }
            for (let n of list.items) {
                if (n.type == "Category") {
                    insideSearch(n, cat);
                }
            }
            return langArrEleOptions;
        }

        // pick & up = better
        if (lang.Name != "") {
            let stats=lang.Stats();
            
            if ((!allTranslates && stats >= 50 && FilterCountry(lang.Country)) || (allTranslates && lang.Quality >= 0)) {
                let name = lang.Name;
  
                if (lang.Quality > 2) name += " ‚úÖ";
                if (stats < 50) name += " üí©";

                languagesList.push(lang);

                let category;
                if (Array.isArray(lang.Category)) {
                    for (let c of lang.Category.reverse()) {
                        let cat = insideSearch(langArrEleOptions, c);
                        if (cat != langArrEleOptions) {
                            category = cat;
                            break;
                        }
                    }
                    if (category == undefined) category = langArrEleOptions
                } else {
                    category = insideSearch(langArrEleOptions, lang.Category);
                }

                // Add color
                if (lang.Quality == 5) {
                    lang.ColorFillStyle = "Gold";
                    lang.ColorStrokeStyle = "Black";
                } else if (lang.Quality == 4) {
                    lang.ColorFillStyle = "Yellow";
                    lang.ColorStrokeStyle = "Black";
                } else if (lang.Quality == 3) {
                    lang.ColorFillStyle = "Orange";
                    lang.ColorStrokeStyle = "Black";
                } else if (lang.Quality == 2) {
                    lang.ColorFillStyle = "#cd7f32";
                    lang.ColorStrokeStyle = 'rgb(0,0,0,.9)';
                } else if (lang.Quality == 1) {
                    lang.ColorFillStyle = "Red";
                    lang.ColorStrokeStyle = 'rgb(0,0,0,.8)';
                } else if (lang.Quality == 0) {
                    lang.ColorFillStyle = "rgb(128,128,128,.1)";
                    lang.ColorStrokeStyle = 'rgb(0,0,0,.5)';
                } else { lang.ColorFillStyle = "Black"; }

                let nodeLang = {
                    id: lang.id,
                    Name: lang.Name,
                    type: "Option"
                };
              
                category.items.push(nodeLang);
            }

        } else {
            if (dev) console.log("This lang has problems: ", lang.fileName);
        }
    }

    function loadLangFile(fileText) {
        const delimiter = '¬ß'
        let fileContents = fileText.split(delimiter);

        // Same lines
        let lines=fileContents[0].split('\n');
        let lineNumber=1;
        sSimpleWord=loadShortcuts(lines, lineNumber);
        sPhrase=loadShortcuts(lines, lineNumber);
        sSentence=loadShortcuts(lines, lineNumber);
        sSentencePart=loadShortcuts(lines, lineNumber);
        sSentencePattern=loadShortcuts(lines, lineNumber);
        sSentencePatternPart=loadShortcuts(lines, lineNumber);
        sReplaceS=loadShortcuts(lines, lineNumber);
        sReplaceG=loadShortcuts(lines, lineNumber);
        sReplaceE=loadShortcuts(lines, lineNumber);
        sPatternNounFrom=loadShortcuts(lines, lineNumber);
        sPatternNounTo=loadShortcuts(lines, lineNumber);
        sPatternAdjectiveFrom=loadShortcuts(lines, lineNumber);
        sPatternAdjectiveTo=loadShortcuts(lines, lineNumber);
        sPatternPronounFrom=loadShortcuts(lines, lineNumber);
        sPatternPronounTo=loadShortcuts(lines, lineNumber);
        sPatternNumberFrom=loadShortcuts(lines, lineNumber);
        sPatternNumberTo=loadShortcuts(lines, lineNumber);
        sPatternVerbFrom=loadShortcuts(lines, lineNumber);
        sPatternVerbTo=loadShortcuts(lines, lineNumber);
        sAdverb=loadShortcuts(lines, lineNumber);
        sPreposition=loadShortcuts(lines, lineNumber);
        sConjunction=loadShortcuts(lines, lineNumber);
        sParticle=loadShortcuts(lines, lineNumber);
        sInterjection=loadShortcuts(lines, lineNumber);

        // Po souborech
        for (let i = 1; i < fileContents.length; i++) {
            let fileText = fileContents[i];
            RegisterLang(fileText, i);
            progressLoading=i/fileContents.length/2+0.5;
        }        
    
        function loadShortcuts(lines, start) {
            let listShortcuts=[];
            for (let i=start; i<lines.length; i++) {
                let line=lines[i];
                lineNumber++;
                if (line=="-") return listShortcuts;
                listShortcuts.push({id: i-start, data: line});
            }
            return listShortcuts;
        }
    }

    // Usage example
    fetchWithProgress(chrome.runtime.getURL(languagesPackage), (loaded, total) => {
        if (total>0){
            progressLoading=loaded / total/2;
            if (dev) console.log((progressLoading * 100) + "%");
        }
    }).then(downloadedData => {
        // console.log('Fetched data:', downloadedData);
        // ov≈ôen√≠ kalibrace mapy
        /*if (false) {
            let handlova = new LanguageTr();
            handlova.Load("TW v0.1\ntHandlova\ncTesting point\ng48.7283153,18.7590888\nq=5".split('\n'));
            AddLang(handlova);

            let nymburk = new LanguageTr();
            nymburk.Load("TW v0.1\ntNymburk\ncTesting point\ng50.1856607,15.0428904\nq=5".split('\n'));
            AddLang(nymburk);
        }*/

        // Sorry for everyone for bigger file, but Opera extensions block custom format (.trw_a files)
        let data=JSON.parse(downloadedData);
        loadLangFile(data.data);
               
        setTimeout(function() {
            progressLoading=1;
            loadedLangs=1;
        }, 100)
    })/*.catch(error => {
        console.log('Error fetching data:', error);
    })*/;
}

async function fetchWithProgress(url, onProgress) {
    const response = await fetch(url);
    if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const reader = response.body.getReader();
    const contentLength = +response.headers.get('Content-Length');

    let receivedLength = 0; // Received bytes so far
    const chunks = []; // Array to hold the downloaded chunks

    while (true) {
        const { done, value } = await reader.read();

        if (done) break;

        chunks.push(value);
        receivedLength += value.length;

        if (onProgress) {
            onProgress(receivedLength, contentLength);
        }
    }

    const chunksAll = new Uint8Array(receivedLength);
    let position = 0;
    for (let chunk of chunks) {
        chunksAll.set(chunk, position);
        position += chunk.length;
    }

    const result = new TextDecoder("utf-8").decode(chunksAll);

    return result;
}

function TranslateSimpleText(input) {
    currentLang = GetCurrentLanguage();

    if (currentLang !== null) {
        let out = currentLang.Translate(input, false);
        if (dev) console.log("Transtated as: ", out);
        return out;
    }
}

function GetDic() {
    currentLang = GetCurrentLanguage();
    let input = dicInput.value;

    urlParamChange("input", input, true);
    urlParamChange("lang", currentLang.Name, true);

    if (currentLang.Quality < 2) document.getElementById("nodeTranslateTextLowQuality").style.display = "block";
    else document.getElementById("nodeTranslateTextLowQuality").style.display = "none";

    if (currentLang !== null) {
        let out = currentLang.GetDic(input);
        document.getElementById("dicOut").innerHTML = "";
        document.getElementById("dicOut").appendChild(out);
    }
}

// Z√≠skat zvolen√Ω p≈ôeklad
function GetCurrentLanguage() {
    for (let e of languagesList) {
        if (e.Name == currentLang) {
            currentLang=e;
            return e;
        }
    }
    return null;
}

let step = 0;
let stepEnd = NaN;

function BuildSelect(lang) {
    if (lang == null) return "";
    let parent = document.getElementById("optionsSelect");
    parent.innerHTML = "";
    if (lang.SelectReplace == undefined) return;
    if (lang.SelectReplace == null) return;

    // lang.SelectReplace = nap≈ô. [["≈Ç", ["≈Ç", "u"]], ["√™", ["e", "√™"]]]
    for (let i = 0; i < lang.SelectReplace.length; i++) {
        const l = lang.SelectReplace[i];
        let to = l[1];
        let node = document.createElement("select");
        node.setAttribute("languageTo", lang.Name)
        node.setAttribute("languageSelectIndex", i);

        // Options
        for (const z of to) {
            let option = document.createElement("option");
            option.innerText = z;
            node.appendChild(option);
        }


        // text
        let info = document.createElement("span");
        info.innerText = "V√Ωbƒõr: ";
        parent.appendChild(info);

        parent.appendChild(node);
    }
}

function isNumeric(str) {
    if (typeof str != "string") return false;
    return !isNaN(str) && !isNaN(parseFloat(str));
}

function ToXOcur(char, ocur, string) {
    let cnt = 0;
    let ret = "",
        bef = "";

    for (let i = 0; i < string.length; i++) {
        let ch = string[i];

        if (cnt == ocur) {
            ret += ch;
        } else {
            if (ch == char) cnt++;
            bef += ch;
        }
    }
    return [bef, ret];
}

function FilterCountry(country) {
    // v≈°e
    if (areaTranslations=="all") return true;

    // nezn√°m√©
    if (country<=0) return true;
    if (country==undefined) return true;

    // morava
    if (country==1) return true;

    // morav enkl√°vy
    if (country==8 && (areaTranslations=="mor+e"|| areaTranslations=="mor+sl"|| areaTranslations=="default")) return true;
    
    // slezsko v ƒçr
    if (country==2 && (areaTranslations=="mor+sl" || areaTranslations=="default")) return true;

    return false;
}

function SetCurrentTranscription(transCode) {

    if (transCode == "czechsimple") return [
        { from: "m≈àe", to: "mƒõ" },
        { from: "fje", to: "fƒõ" },
        { from: "pje", to: "pƒõ" },

        { from: "ƒèe", to: "dƒõ" },
        { from: "≈•e", to: "tƒõ" },
        { from: "≈àe", to: "nƒõ" },

        { from: "ƒèi", to: "di" },
        { from: "≈•i", to: "ti" },
        { from: "≈ài", to: "ni" },

        { from: "ƒè√≠", to: "d√≠" },
        { from: "≈•√≠", to: "t√≠" },
        { from: "≈à√≠", to: "n√≠" },

        { from: "ijo", to: "io" },
        { from: "iju", to: "iu" },
        { from: "ije", to: "ie" },
        { from: "ija", to: "ia" },

        { from: "ij√≥", to: "i√≥" },
        { from: "ij√∫", to: "i√∫" },
        { from: "ij√©", to: "i√©" },
        { from: "ij√°", to: "i√°" },

        { from: "√¥", to: "o" },
        { from: "√™", to: "e" },
        { from: "aÃ£ÃÅ", to: "√≥" },
        { from: "Ã•√°", to: "√≥" },
        { from: "…ô", to: "e" },
        { from: "·πµ", to: "u" },
        { from: "≈Ç", to: "l" },
        { from: "≈ï", to: "r" },
        { from: "ƒ∫", to: "l" },

        { from: "ni", to: "ny" },
        { from: "n√≠", to: "n√Ω" },

        { from: "ti", to: "ty" },
        { from: "t√≠", to: "t√Ω" },

        { from: "di", to: "dy" },
        { from: "d√≠", to: "d√Ω" },

        { from: "chi", to: "chy" },
        { from: "hi", to: "hy" },
        { from: "ki", to: "ky" },
        { from: "ri", to: "ry" },

        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "o" },
        { from: "√≥ÃÅ", to: "√≥" },

        { from: "≈ã", to: "n" },

        { from: "vje", to: "vƒõ", type: "end" },
        { from: "bje", to: "bƒõ", type: "end" },
        { from: "bjej√≠c√≠", to: "bƒõj√≠c√≠", type: "end" },
    ];

    // czech phonetics
    if (transCode == "czech") return [
        { from: "dz", to: " í" },
        { from: "d≈æ", to: " íÃÜ" },
        { from: "vƒõ", to: "vje" },
        { from: "bƒõ", to: "bje" },
        { from: "pƒõ", to: "pje" },
        { from: "fƒõ", to: "fje" },

        { from: "Vƒõ", to: "Vje" },
        { from: "Bƒõ", to: "Bje" },
        { from: "Pƒõ", to: "Pje" },
        { from: "Fƒõ", to: "Fje" },
        
        //{ from: "au", to: "auÃØ" },
        //{ from: "eu", to: "euÃØ" },
        //{ from: "ou", to: "ouÃØ" },
        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "e" },
        { from: "√≥ÃÅ", to: "√≥" },
        { from: "·πµ", to: "uÃØ" },
        { from: "aÃ£ÃÅ", to: "Ã•√°" },
    ];

    if (transCode == "moravian") return [
        { from: "ch", to: "x" },
        { from: "x", to: "ks" },
        { from: "ƒè", to: "dj" },
        { from: "≈•", to: "tj" },
        { from: "≈à", to: "nj" },

        { from: "Ch", to: "X" },
        { from: "X", to: "Ks" },
        { from: "ƒé", to: "Dj" },
        { from: "≈§", to: "Tj" },
        { from: "≈á", to: "Nj" },

        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "o" },
        { from: "≈ã", to: "n" },

        { from: "≈à", to: "≈à", type: "end" },
        { from: "√≥ÃÅ", to: "√≥" },
    ];

    if (transCode == "slovak") return [
        { from: "≈àje", to: "nie" },
        { from: "≈àj√©", to: "ni√©" },
        { from: "≈àja", to: "nia" },
        { from: "≈àj√°", to: "ni√°" },
        { from: "≈àju", to: "niu" },
        { from: "≈ài", to: "ni" },
        { from: "≈à√≠", to: "n√≠" },
        { from: "≈àe", to: "nƒõ" },

        { from: "≈•je", to: "tie" },
        { from: "≈•j√©", to: "ti√©" },
        { from: "≈•ja", to: "tia" },
        { from: "≈•j√°", to: "ti√°" },
        { from: "≈•ju", to: "tiu" },
        { from: "≈•i", to: "ti" },
        { from: "≈•√≠", to: "t√≠" },
        { from: "≈•e", to: "tƒõ" },

        { from: "ƒèje", to: "die" },
        { from: "ƒèj√©", to: "di√©" },
        { from: "ƒèja", to: "dia" },
        { from: "ƒèj√°", to: "di√°" },
        { from: "ƒèju", to: "diu" },
        { from: "ƒèi", to: "di" },
        { from: "ƒè√≠", to: "d√≠" },
        { from: "ƒèe", to: "dƒõ" },

        { from: "≈ã", to: "n" },
    ];

    if (transCode == "silezian_slabikorzovy") return [
        { from: "bje", to: "bie" },
        { from: "vje", to: "vie" },
        { from: "vƒõ", to: "vie" },
        { from: "pƒõ", to: "pie" },
        { from: "mje", to: "mie" },
        { from: "mƒõ", to: "mie" },
        { from: "d≈∫e", to: "dzie" },
        { from: "≈àa", to: "nia" },
        
        { from: "tƒõ", to: "tie" },
        { from: "≈•e", to: "tie" },
        
        { from: "≈àe", to: "nie" },
        { from: "nƒõ", to: "nie" },
        { from: "≈Ñe", to: "nie" },

        { from: "pÃÅi", to: "pi" },

        { from: "ƒáa", to: "cia" },
        { from: "ƒáe", to: "cie" },
        { from: "ƒái", to: "ci" },
        { from: "ƒáo", to: "cio" },
        { from: "ƒáu", to: "ciu" },
        { from: "ƒáy", to: "ciy" },

        { from: "≈õa", to: "sia" },
        { from: "≈õe", to: "sie" },
        { from: "≈õi", to: "si" },
        { from: "≈õo", to: "sio" },
        { from: "≈õu", to: "siu" },
        { from: "≈õy", to: "siy" },

        { from: "≈∫a", to: "zia" },
        { from: "≈∫e", to: "zie" },
        { from: "≈∫i", to: "zi" },
        { from: "≈∫o", to: "zio" },
        { from: "≈∫u", to: "ziu" },
        { from: "≈∫y", to: "ziy" },

        { from: "≈à√≠", to: "n√≠" },
        { from: "ƒè√≠", to: "d√≠" },
        { from: "≈•√≠", to: "t√≠" },

        { from: "≈ài", to: "ni" },
        { from: "ƒèi", to: "di" },
        { from: "≈•i", to: "ti" },

        { from: "ƒç", to: "cz" },
        { from: "≈°", to: "sz" },
        { from: "≈ô", to: "rz" },
        { from: "≈æ", to: "≈º" },
        { from: "v", to: "w" },

        { from: "ƒå", to: "Cz" },
        { from: "≈†", to: "Sz" },
        { from: "≈ò", to: "Rz" },
        { from: "≈Ω", to: "≈ª" },
        { from: "V", to: "W" },

        { from: "≈Ø", to: "≈ç" },

        { from: "·πµ", to: "≈Ç" },
        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "o" },
        { from: "√≥ÃÅ", to: "√≥" },

        { from: "≈ã", to: "n" },
    ];

    if (transCode == "ipa") return [
        { from: "≈ô", to: "rÃùÃä" }, //ÃùÃä
        { from: "vƒõ", to: "vj…õ" },
        { from: "mƒõ", to: "m…≤…õ" },
        { from: "m≈àe", to: "m…≤…õ" },
        { from: "u", to: " ä" },

        { from: "√°", to: "aÀê" },
        { from: "√©", to: "eÀê" },
        { from: "√≠", to: "iÀê" },
        { from: "√≥", to: "…îÀê" },
        { from: "√∫", to: "uÀê" },
        { from: "≈Ø", to: "uÀê" },

        { from: "au", to: "a ä" },
        { from: "eu", to: "e ä" },
        { from: "ou", to: "o äÃØ" },

        { from: "≈•", to: "c" },
        { from: "ƒè", to: "…ü" },
        { from: "c", to: "tÕ°s" },
        { from: "dz", to: "dÕ°z" },
        { from: "ƒç", to: "tÕ° É" },
        { from: "d≈æ", to: "dÕ° í" },
        { from: "ch", to: "x" },
        //{ from: "ch", 	to: "…£", type: "end"},
        { from: "h", to: "…¶" },

        { from: "ai", to: "a…™ÃØ" },
        { from: "ei", to: "e…™ÃØ" },
        { from: "oi", to: "…î…™ÃØ" },

        { from: "≈°", to: " É" },
        { from: "≈æ", to: " í" },

        { from: "≈à", to: "…≤" },
        { from: "nƒõ", to: "…≤e" },

        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "o" },
        { from: "√≥ÃÅ", to: "√≥" },
    ];

    if (transCode == "katakana") return [
        { from: "ƒçe", to: "„ÉÅ„Çß" },
        { from: "k√≥", to: "„Ç≥„Éº" },

        { from: " ", to: "„Éª" },

        { from: "≈Ça", to: "„ÉØ" }, { from: "≈Åa", to: "„ÉØ" },
        
        { from: "mƒõ", to: "„Éü„Çß" }, { from: "Mƒõ", to: "„Éü„Çß" },
        { from: "mje", to: "„Éü„Çß" }, { from: "Mje", to: "„Éü„Çß" },


        { from: "dy", to: "„Éá„Ç£" }, { from: "Dy", to: "„Éá„Ç£" },
        { from: "fi", to: "„Éï„Ç£" }, { from: "Fi", to: "„Éï„Ç£" },

        { from: "bƒõ", to: "„Éì„Çß" }, { from: "Bƒõ", to: "„Éì„Çß" },
        { from: "bje", to: "„Éì„Çß" }, { from: "Bje", to: "„Éì„Çß" },

        { from: "fo", to: "„Éï„Ç©" }, { from: "Fo", to: "„Éï„Ç©" },
        { from: "f√≥", to: "„Éï„Ç©„Éº" }, { from: "F√≥", to: "„Éï„Ç©„Éº" },

        { from: "vu", to: "„É¥" }, { from: "Vu", to: "„É¥" },
        { from: "v≈Ø", to: "„É¥„Éº" }, { from: "V≈Ø", to: "„É¥„Éº" },

        { from: "ka", to: "„Ç´" }, { from: "Ka", to: "„Ç´" },
        { from: "k√°", to: "„Ç´„Éº" }, { from: "K√°", to: "„Ç´„Éº" },

        { from: "ra", to: "„É©" }, { from: "Ra", to: "„É©" },
        { from: "r√°", to: "„É©„Éº" }, { from: "R√°", to: "„É©„Éº" },

        { from: "la", to: "„É©„Çö" },   { from: "La", to: "„É©„Çö" },
        { from: "l√°", to: "„É©„Çö„Éº" }, { from: "L√°", to: "„É©„Çö„Éº" },

        { from: "sa", to: "„Çµ" }, { from: "Sa", to: "„Çµ" },
        { from: "s√°", to: "„Çµ„Éº" }, { from: "S√°", to: "„Çµ„Éº" },

        { from: "ta", to: "„Çø" }, { from: "Ta", to: "„Çø" },
        { from: "t√°", to: "„Çø„Éº" }, { from: "T√°", to: "„Çø„Éº" },

        { from: "na", to: "„Éä" }, { from: "Na", to: "„Éä" },
        { from: "n√°", to: "„Éä„Éº" }, { from: "N√°", to: "„Éä„Éº" },

        { from: "ha", to: "„Éè" }, { from: "Ha", to: "„Éè" },
        { from: "h√°", to: "„Éè„Éº" }, { from: "H√°", to: "„Éè„Éº" },

        { from: "ma", to: "„Éû" }, { from: "Ma", to: "„Éû" },
        { from: "m√°", to: "„Éû„Éº" }, { from: "M√°", to: "„Éû„Éº" },

        { from: "ja", to: "„É§" }, { from: "Ja", to: "„É§" },
        { from: "j√°", to: "„É§„Éº" }, { from: "J√°", to: "„É§„Éº" },

        { from: "va", to: "„ÉØ" }, { from: "Va", to: "„ÉØ" },
        { from: "v√°", to: "„ÉØ„Éº" }, { from: "V√°", to: "„ÉØ„Éº" },

        { from: "ga", to: "„Ç¨" }, { from: "Ga", to: "„Ç¨" },
        { from: "g√°", to: "„Ç¨„Éº" }, { from: "G√°", to: "„Ç¨„Éº" },

        { from: "za", to: "„Ç∂" }, { from: "Za", to: "„Ç∂" },
        { from: "z√°", to: "„Ç∂„Éº" }, { from: "Z√°", to: "„Ç∂„Éº" },

        { from: "da", to: "„ÉÄ" }, { from: "Da", to: "„ÉÄ" },
        { from: "d√°", to: "„ÉÄ„Éº" }, { from: "D√°", to: "„ÉÄ„Éº" },

        { from: "ba", to: "„Éê" }, { from: "Ba", to: "„Éê" },
        { from: "b√°", to: "„Éê„Éº" }, { from: "B√°", to: "„Éê„Éº" },

        { from: "pa", to: "„Éë" }, { from: "Pa", to: "„Éë" },
        { from: "p√°", to: "„Éë„Éº" }, { from: "P√°", to: "„Éë„Éº" },


        { from: "ki", to: "„Ç≠" }, { from: "Ki", to: "„Ç≠" },
        { from: "k√≠", to: "„Ç≠„Éº" }, { from: "K√≠", to: "„Ç≠„Éº" },
        { from: "ky", to: "„Ç≠" }, { from: "Ky", to: "„Ç≠" },
        { from: "k√Ω", to: "„Ç≠„Éº" }, { from: "K√Ω", to: "„Ç≠„Éº" },

        { from: "≈°i", to: "„Ç∑" }, { from: "≈†i", to: "„Ç∑" },
        { from: "≈°√≠", to: "„Ç∑„Éº" }, { from: "≈†√≠", to: "„Ç∑„Éº" },

        { from: "ƒçi", to: "„ÉÅ" }, { from: "ƒåi", to: "„ÉÅ" },
        { from: "ƒç√≠", to: "„ÉÅ„Éº" }, { from: "ƒå√≠", to: "„ÉÅ„Éº" },

        { from: "ni", to: "„Éã" }, { from: "Ni", to: "„Éã" },
        { from: "n√≠", to: "„Éã„Éº" }, { from: "N√≠", to: "„Éã„Éº" },
        { from: "ny", to: "„Éã" }, { from: "Ny", to: "„Éã" },
        { from: "n√Ω", to: "„Éã„Éº" }, { from: "N√Ω", to: "„Éã„Éº" },

        { from: "hi", to: "„Éí" }, { from: "Hi", to: "„Éí" },
        { from: "h√≠", to: "„Éí„Éº" }, { from: "H√≠", to: "„Éí„Éº" },
        { from: "hy", to: "„Éí" }, { from: "Hy", to: "„Éí" },
        { from: "h√Ω", to: "„Éí„Éº" }, { from: "H√Ω", to: "„Éí„Éº" },

        { from: "mi", to: "„Éü" }, { from: "Mi", to: "„Éü" },
        { from: "m√≠", to: "„Éü„Éº" }, { from: "M√≠", to: "„Éü„Éº" },
        { from: "my", to: "„Éü" }, { from: "My", to: "„Éü" },
        { from: "m√Ω", to: "„Éü„Éº" }, { from: "M√Ω", to: "„Éü„Éº" },

        { from: "ri", to: "„É™" }, { from: "Ri", to: "„É™" },
        { from: "r√≠", to: "„É™„Éº" }, { from: "R√≠", to: "„É™„Éº" },
        { from: "ry", to: "„É™" }, { from: "Ry", to: "„É™" },
        { from: "r√Ω", to: "„É™„Éº" }, { from: "R√Ω", to: "„É™„Éº" },

        { from: "li", to: "„É™„Çö" },   { from: "Li", to: "„É™„Çö" },
        { from: "l√≠", to: "„É™„Çö„Éº" }, { from: "L√≠", to: "„É™„Çö„Éº" },
        { from: "ly", to: "„É™„Çö" },   { from: "Ly", to: "„É™„Çö" },
        { from: "l√Ω", to: "„É™„Çö„Éº" }, { from: "L√Ω", to: "„É™„Çö„Éº" },

        { from: "vi", to: "„É∞" }, { from: "Vi", to: "„É∞" },
        { from: "v√≠", to: "„É∞„Éº" }, { from: "V√≠", to: "„É∞„Éº" },
        { from: "vy", to: "„É∞" }, { from: "Vy", to: "„É∞" },
        { from: "v√Ω", to: "„É∞„Éº" }, { from: "V√Ω", to: "„É∞„Éº" },

        { from: "gi", to: "„ÇÆ" }, { from: "Gi", to: "„ÇÆ" },
        { from: "g√≠", to: "„ÇÆ„Éº" }, { from: "G√≠", to: "„ÇÆ„Éº" },

        { from: "d≈∫i", to: "„Ç∏" }, { from: "D≈∫i", to: "„Ç∏" },
        { from: "d≈∫√≠", to: "„Ç∏„Éº" }, { from: "D≈æ√≠", to: "„Ç∏„Éº" },

        { from: "bi", to: "„Éì" }, { from: "Bi", to: "„Éì" },
        { from: "b√≠", to: "„Éì„Éº" }, { from: "B√≠", to: "„Éì„Éº" },
        { from: "by", to: "„Éì" }, { from: "By", to: "„Éì" },
        { from: "b√Ω", to: "„Éì„Éº" }, { from: "B√Ω", to: "„Éì„Éº" },

        { from: "pi", to: "„Éî" }, { from: "Pi", to: "„Éî" },
        { from: "p√≠", to: "„Éî„Éº" }, { from: "P√≠", to: "„Éî„Éº" },

        { from: "py", to: "„Éî" }, { from: "Py", to: "„Éî" },
        { from: "p√Ω", to: "„Éî„Éº" }, { from: "P√Ω", to: "„Éî„Éº" },

        { from: "ci", to: "„ÉÅ„Ç£" }, { from: "Ci", to: "„ÉÅ„Ç£" },
        { from: "c√≠", to: "„ÉÅ„Ç£„Éº" }, { from: "C√≠", to: "„ÉÅ„Ç£„Éº" },


        { from: "nu", to: "„Éå" },   { from: "Nu", to: "„Éå" },
        { from: "n≈Ø", to: "„Éå„Éº" }, { from: "N≈Ø", to: "„Éå„Éº" },

        { from: "su", to: "„Çπ" },   { from: "Su", to: "„Çπ" },
        { from: "s≈Ø", to: "„Çπ„Éº" }, { from: "S≈Ø", to: "„Çπ„Éº" },

        { from: "lu", to: "„É´„Çö" },   { from: "Lu", to: "„É´„Çö" },
        { from: "l≈Ø", to: "„É´„Çö„Éº" }, { from: "L≈Ø", to: "„É´„Çö„Éº" },
                
        { from: "du", to: "„Éâ„Ç•" },   { from: "Du", to: "„Éâ„Ç•" },
        { from: "d≈Ø", to: "„Éâ„Ç•„Éº" }, { from: "D≈Ø", to: "„Éâ„Ç•„Éº" },
        
        { from: "bu", to: "„Éñ" },   { from: "Bu", to: "„Éñ" },
        { from: "b≈Ø", to: "„Éñ„Éº" }, { from: "B≈Ø", to: "„Éñ„Éº" },
        
        { from: "pu", to: "„Éó" },   { from: "Pu", to: "„Éó" },
        { from: "p≈Ø", to: "„Éó„Éº" }, { from: "P≈Ø", to: "„Éó„Éº" },
        
        { from: "ru", to: "„É´" },   { from: "Ru", to: "„É´" },
        { from: "r≈Ø", to: "„É´„Éº" }, { from: "R≈Ø", to: "„É´„Éº" },
        
        { from: "ƒçu", to: "„ÉÅ„Ç•" },   { from: "ƒåu", to: "„ÉÅ„Ç•" },
        { from: "ƒç≈Ø", to: "„ÉÅ„Ç•„Éº" }, { from: "ƒå≈Ø", to: "„ÉÅ„Ç•„Éº" },
        { from: "ƒç√∫", to: "„ÉÅ„Ç•„Éº" }, { from: "ƒå√∫", to: "„ÉÅ„Ç•„Éº" },
        

        { from: "ne", to: "„Éç" },   { from: "Ne", to: "„Éç" },
        { from: "n√©", to: "„Éç„Éº" }, { from: "N√©", to: "„Éç„Éº" },
        
        { from: "ke", to: "„Ç±" },   { from: "Ke", to: "„Ç±" },
        { from: "k√©", to: "„Ç±„Éº" }, { from: "K√©", to: "„Ç±„Éº" },
 
        { from: "se", to: "„Çª" },   { from: "Se", to: "„Çª" },
        { from: "s√©", to: "„Çª„Éº" }, { from: "S√©", to: "„Çª„Éº" },
 
        { from: "re", to: "„É¨" },   { from: "Re", to: "„É¨" },
        { from: "r√©", to: "„É¨„Éº" }, { from: "R√©", to: "„É¨„Éº" },

        { from: "le", to: "„É¨„Çö" },   { from: "Le", to: "„É¨„Çö" },
        { from: "l√™", to: "„É¨„Çö" },   { from: "L√™", to: "„É¨„Çö" },
        { from: "l√©", to: "„É¨„Çö„Éº" }, { from: "L√©", to: "„É¨„Çö„Éº" },

        { from: "me", to: "„É°" },   { from: "Me", to: "„É°" },
        { from: "m√©", to: "„É°„Éº" }, { from: "M√©", to: "„É°„Éº" },

        { from: "ve", to: "„É±" },   { from: "Ve", to: "„É±" },
        { from: "v√©", to: "„É±„Éº" }, { from: "V√©", to: "„É±„Éº" },


        { from: "to", to: "„Éà" },   { from: "To", to: "„Éà" },
        { from: "t√≥", to: "„Éà„Éº" }, { from: "T√≥", to: "„Éà„Éº" },
         
        { from: "ho", to: "„Éõ" },   { from: "Ho", to: "„Éõ" },
        { from: "h√≥", to: "„Éõ„Éº" }, { from: "H√≥", to: "„Éõ„Éº" },
         
        { from: "ro", to: "„É≠" },   { from: "Ro", to: "„É≠" },
        { from: "r√¥", to: "„É≠" },   { from: "R√¥", to: "„É≠" },
        { from: "r√≥", to: "„É≠„Éº" }, { from: "R√≥", to: "„É≠„Éº" },   
  
        { from: "ko", to: "„Ç≥" },   { from: "Ko", to: "„Ç≥" },
        { from: "k√¥", to: "„Ç≥" },   { from: "K√¥", to: "„Ç≥" },
        { from: "k√≥", to: "„Ç≥„Éº" }, { from: "K√≥", to: "„Ç≥„Éº" },
  
        { from: "do", to: "„Éâ" },   { from: "Do", to: "„Éâ" },
        { from: "d√≥", to: "„Éâ„Éº" }, { from: "D√≥", to: "„Éâ„Éº" },
  
        { from: "no", to: "„Éé" },   { from: "No", to: "„Éé" },
        { from: "n√≥", to: "„Éé„Éº" }, { from: "N√≥", to: "„Éé„Éº" },

        { from: "bo", to: "„Éú" },   { from: "Bo", to: "„Éú" },
        { from: "b√≥", to: "„Éú„Éº" }, { from: "B√≥", to: "„Éú„Éº" },

        { from: "lo", to: "„É≠„Çö" },   { from: "Lo", to: "„É≠„Çö" },
        { from: "l√≥", to: "„É≠„Çö„Éº" }, { from: "L√≥", to: "„É≠„Çö„Éº" },

        { from: "vo", to: "„É≤" },   { from: "Vo", to: "„É≤" },
        { from: "v√¥", to: "„É≤" },   { from: "V√¥", to: "„É≤" },
        { from: "v√≥", to: "„É≤„Éº" }, { from: "V√≥", to: "„É≤„Éº" },
 
        { from: "po", to: "„Éù" },   { from: "Po", to: "„Éù" },
        { from: "p√≥", to: "„Éù„Éº" }, { from: "P√≥", to: "„Éù„Éº" },
 

        { from: "je", to: "„Ç§„Ç®" },   { from: "Je", to: "„Ç§„Ç®" },
        { from: "j√©", to: "„Ç§„Ç®„Éº" }, { from: "J√©", to: "„Ç§„Ç®„Éº" },

        { from: "≈°e", to: "„Ç∑„Çß" },   { from: "≈†e", to: "„Ç∑„Çß" },
        { from: "≈°√©", to: "„Ç∑„Çß„Éº" }, { from: "≈†√©", to: "„Ç∑„Çß„Éº" },


        { from: "vje", to: "„É¥„Ç£„Çß" },  { from: "Vje", to: "„É¥„Ç£„Çß" },
        { from: "vƒõ", to: "„É¥„Ç£„Çß" },   { from: "Vƒõ", to: "„É¥„Ç£„Çß" },

        { from: "nje", to: "„Éã„Çß" },  { from: "Nje", to: "„Éã„Çß" },
        { from: "nƒõ", to: "„Éã„Çß" },   { from: "Nƒõ", to: "„Éã„Çß" },

        { from: "pje", to: "„Éî„Çß" },  { from: "Pje", to: "„Éî„Çß" },
        { from: "pƒõ", to: "„Éî„Çß" },   { from: "Pƒõ", to: "„Éî„Çß" },

        { from: "bje", to: "„Éì„Çß" },  { from: "Bje", to: "„Éì„Çß" },
        { from: "bƒõ", to: "„Éì„Çß" },   { from: "Bƒõ", to: "„Éì„Çß" },


        { from: "i", to: "„Ç§" },    { from: "I", to: "„Ç§" },
        { from: "√≠", to: "„Ç§„Éº" },  { from: "√ç", to: "„Ç§„Éº" },

        { from: "a", to: "„Ç¢" },    { from: "A", to: "„Ç¢" },
        { from: "√°", to: "„Ç¢„Éº" },  { from: "√Å", to: "„Ç¢„Éº" },


        { from: "≈à", to: "„É≥" }, { from: "≈á", to: "„É≥" },
        { from: "n", to: "„É≥" }, { from: "N", to: "„É≥" },
        { from: "≈ã", to: "„É≥" },
    ];

    if (transCode == "hiragana") return [
        { from: "ƒæu", to: "„Çä„ÇÖ" },
        { from: "rj√∫", to: "„Çä„ÇÖ„ÅÜ" },

        { from: "ƒça", to: "„Å°„ÇÉ" }, { from: "ƒåa", to: "„Å°„ÇÉ" },
        { from: "ƒç√°", to: "„Å°„ÇÉ„ÅÇ" }, { from: "K√©", to: "„Å°„ÇÉ„ÅÇ" },

        { from: "d≈æi", to: "„Å¢" },

        { from: "ka", to: "„Åã" }, { from: "Ka", to: "„Åã" },
        { from: "ga", to: "„Åå" },

        { from: "ki", to: "„Åç" },
        { from: "ku", to: "„Åè" },
        { from: "ke", to: "„Åë" },

        { from: "ja", to: "„ÇÑ" }, { from: "Ja", to: "„ÇÑ" },
        { from: "ju", to: "„ÇÜ" }, { from: "Ju", to: "„ÇÜ" },
        { from: "jo", to: "„Çà" }, { from: "Jo", to: "„Çà" },

        { from: "re", to: "„Çå" }, { from: "Re", to: "„Çå" },
        { from: "r√©", to: "„Çå„Åà" }, { from: "R√©", to: "„Çå„Åà" },

        { from: "se", to: "„Åõ" }, { from: "Se", to: "„Åõ" },
        { from: "s√©", to: "„Åõ„Åà" }, { from: "S√©", to: "„Åõ„Åà" },

        { from: "pi", to: "„Å¥" }, { from: "Pi", to: "„Å¥" },
        { from: "p√≠", to: "„Å¥„ÅÑ" }, { from: "P√≠", to: "„Å¥„ÅÑ" },

        { from: "ni", to: "„Å´" }, { from: "Ni", to: "„Å´" },
        { from: "n√≠", to: "„Å´„ÅÑ" }, { from: "N√≠", to: "„Å´„ÅÑ" },

        { from: "mo", to: "„ÇÇ" }, { from: "Mo", to: "„ÇÇ" },
        { from: "m√≥", to: "„ÇÇ„ÅÜ" }, { from: "M√≥", to: "„ÇÇ„ÅÜ" },

        { from: "to", to: "„Å®" }, { from: "To", to: "„Å®" },
        { from: "t√≥", to: "„Å®„ÅÜ" }, { from: "T√≥", to: "„Å®„ÅÜ" },

        { from: "ra", to: "„Çâ" }, { from: "Ra", to: "„Çâ" },
        { from: "r√°", to: "„Çâ„ÅÇ" }, { from: "R√°", to: "„Çâ„ÅÇ" },

        { from: "ta", to: "„Åü" }, { from: "Ta", to: "„Åü" },
        { from: "t√°", to: "„Åü„ÅÇ" }, { from: "T√°", to: "„Åü„ÅÇ" },

        { from: "ke", to: "„Åë" }, { from: "Ke", to: "„Åë" },
        { from: "k√©", to: "„Åë„ÅÑ" }, { from: "K√©", to: "„Åë„ÅÑ" },

        { from: "hi", to: "„Å≤" }, { from: "Hi", to: "„Å≤" },
        { from: "h√≠", to: "„Å≤„ÅÑ" }, { from: "H√≠", to: "„Å≤„ÅÑ" },

        { from: "ko", to: "„Åì" }, { from: "Ko", to: "„Åì" },
        { from: "k√≥", to: "„Åì„Åä" }, { from: "K√≥", to: "„Åì„Åä" },

        { from: "do", to: "„Å©" }, { from: "Do", to: "„Å©" },
        { from: "d√≥", to: "„Å©„Åä" }, { from: "D√≥", to: "„Å©„Åä" },

        { from: "bo", to: "„Åº" }, { from: "Bo", to: "„Åº" },
        { from: "b√≥", to: "„Åº„Åä" }, { from: "B√≥", to: "„Åº„Åä" },

        { from: "ro", to: "„Çç" }, { from: "Ro", to: "„Çç" },
        { from: "r√≥", to: "„Çç„Åä" }, { from: "R√≥", to: "„Çç„Åä" },

        { from: "za", to: "„Åñ" }, { from: "Za", to: "„Åñ" },
        { from: "z√°", to: "„Åñ„ÅÇ" }, { from: "Z√°", to: "„Åñ„ÅÇ" },

        { from: "bu", to: "„Å∂" }, { from: "Bu", to: "„Å∂" },
        { from: "b≈Ø", to: "„Å∂„ÅÜ" }, { from: "B≈Ø", to: "„Å∂„ÅÜ" },

        { from: "du", to: "„Å©„ÅÖ„Å•" }, { from: "Du", to: "„Å©„ÅÖ" },
        { from: "d≈Ø", to: "„Å©„ÅÖ„ÅÜ" }, { from: "D≈Ø", to: "„Å©„ÅÖ„ÅÜ" },


        { from: "vu", to: "„Çî" }, { from: "Vu", to: "„Çî" },
        { from: "v≈Ø", to: "„Çî„ÅÜ" }, { from: "V≈Ø", to: "„Çî„ÅÜ" },


        { from: "ne", to: "„Å≠" }, { from: "Ne", to: "„Å≠" },
        { from: "n√©", to: "„Å≠„Åà" }, { from: "ne", to: "„Å≠„Åà" },

        { from: "da", to: "„Å†" },   { from: "Da", to: "„Å†" },
        { from: "d√°", to: "„Å†„ÅÇ" }, { from: "D√°", to: "„Å†„ÅÇ" },

        { from: "ky", to: "„Åç" },   { from: "Ky", to: "„Åç" },
        { from: "k√Ω", to: "„Åç„ÅÑ" }, { from: "K√Ω", to: "„Åç„ÅÑ" },
   
    
        { from: "va", to: "„Çè" },   { from: "Va", to: "„Çè" },
        { from: "V√°", to: "„Çè„ÅÇ" }, { from: "V√°", to: "„Çè„ÅÇ" },
 
        { from: "vo", to: "„Çí" },   { from: "Vo", to: "„Çí" },
        { from: "v√≥", to: "„Çí„ÅÜ" }, { from: "V√≥", to: "„Çí„ÅÜ" },


        { from: "ho", to: "„Åª" }, { from: "Ho", to: "„Åª" },
        { from: "h√≥", to: "„Åª„ÅÜ" }, { from: "H√≥", to: "„Åª„ÅÜ" },

        { from: "fi", to: "„Åµ„ÅÑ" }, { from: "Fi", to: "„Åµ„ÅÑ" },
        { from: "f√≠", to: "„Åµ„ÅÑ„ÅÑ" }, { from: "F√≠", to: "„Åµ„ÅÑ„ÅÑ" },

        { from: "ƒæu", to: "„Çä„ÇÖ" },
        { from: "sa", to: "„Åï" },
        { from: "na", to: "„Å™" },
        { from: "ma", to: "„Åæ" },
        { from: "chi", to: "„Å°" },
        { from: "cu", to: "„Å§" },
        { from: "fu", to: "„Åµ" },
        { from: "he", to: "„Å∏" },



        { from: "a", to: "„ÅÇ" }, { from: "A", to: "„ÅÇ" },
        { from: "i", to: "„ÅÑ" }, { from: "I", to: "„ÅÑ" },
        { from: "u", to: "„ÅÜ" }, { from: "U", to: "„ÅÜ" },
        { from: "e", to: "„Åà" }, { from: "E", to: "„Åà" },
        { from: "o", to: "„Åä" }, { from: "O", to: "„Åä" },

        { from: "√°", to: "„ÅÇ„ÅÇ" }, { from: "√Å", to: "„ÅÇ„ÅÇ" },
        { from: "√≠", to: "„ÅÑ„ÅÑ" }, { from: "√ç", to: "„ÅÑ„ÅÑ" },
        { from: "√∫", to: "„ÅÜ„ÅÜ" }, { from: "√ö", to: "„ÅÜ„ÅÜ" },
        { from: "√©", to: "„Åà„Åà" }, { from: "√â", to: "„Åà„Åà" },
        { from: "√≥", to: "„Åä„Åä" }, { from: "√ì", to: "„Åä„Åä" },

        { from: "n", to: "„Çì" }, { from: "N", to: "„Çì" }, { from: "≈ã", to: "„Çì" },
    ];

    if (transCode == "steuer") return [
        { from: "vƒõ", to: "vje" },
    ];

    if (transCode == "runy") return [
        // https://www.wmmagazin.cz/preklad-slovanskeho-pisma-z-breclavi/
        { from: "√≥", to: "·õü" }, { from: "√ì", to: "·õü" },
        { from: "ch", to: "·õû" }, { from: "CH", to: "·õû" },
        { from: "ƒçi", to: "·õó" }, { from: "ƒåi", to: "·õó" },
        { from: "ma", to: "·õñ" }, { from: "Ma", to: "·õñ" },
        { from: "r", to: "·ö±" }, { from: "R", to: "·ö±" },
        { from: "j√°", to: "·ö¢" }, { from: "J√°", to: "·ö¢" },
        
        //?????https://www.wmmagazin.cz/wp-content/uploads/2020/09/slovani3-slovnik-praslovani.jpg        
        { from: "f", to: "·ö†" }, { from: "F", to: "·ö†" },
        { from: "u", to: "·ö¢" }, { from: "U", to: "·ö¢" },
        { from: "a", to: "·ö®" }, { from: "A", to: "·ö®" },
        { from: "√°", to: "·ö®·ö®" }, { from: "√Å", to: "·ö®·ö®" },
        
        { from: "nƒõ", to: "·öæ·õÅ·õñ" }, { from: "Nƒõ", to: "·öæ·õÅ·õñ" },
        { from: "≈àe", to: "·öæ·õÅ·õñ" }, { from: "≈áe", to: "·öæ·õÅ·õñ" },

        { from: "vƒõ", to: "·öπ·õÅ·õñ" }, { from: "Vƒõ", to: "·öπ·õÅ·õñ" },
        { from: "vje", to: "·öπ·õñ" }, { from: "Vje", to: "·öπ·õÅ·õñ" },
        
        { from: "m≈àe", to: "·õó·öæ·õÅ·õñ" }, { from: "M≈àe", to: "·õó·öæ·õÅ·õñ" },
        { from: "mƒõ", to: "·õó·öæ·õÅ·õñ" }, { from: "Mƒõ", to: "·õó·öæ·õÅ·õñ" },

        { from: "x", to: "·ö≤·õä" }, { from: "X", to: "·ö≤·õä" },
        
        { from: "≈ô", to: "·ö±·õâ" }, { from: "≈ò", to: "·ö±·õâ" },
        { from: "≈æ", to: "·õâ·ö∫" }, { from: "≈Ω", to: "·õâ·ö∫" },
        
        { from: "k", to: "·ö≤" },{ from: "K", to: "·ö≤" },
        { from: "g", to: "·ö∑" }, { from: "G", to: "·ö∑" },
        { from: "w", to: "·öπ" }, { from: "W", to: "·öπ" },
        { from: "v", to: "·öπ" }, { from: "V", to: "·öπ" },
        { from: "h", to: "·ö∫" }, { from: "H", to: "·ö∫" },
        { from: "n", to: "·öæ" }, { from: "N", to: "·öæ" },{ from: "≈ã", to: "·öæ" },
        { from: "i", to: "·õÅ" }, { from: "I", to: "·õÅ" },
        { from: "√≠", to: "·õÅ·õÅ" },
        { from: "y", to: "·õÅ" },
        { from: "√Ω", to: "·õÅ·õÅ" },

                { from: "j", to: "·õÉ" }, { from: "J", to: "·õÉ" },
        { from: "p", to: "·õà" }, { from: "P", to: "·õà" },
        { from: "z", to: "·õâ" }, { from: "Z", to: "·õâ" },
        { from: "s", to: "·õä" }, { from: "S", to: "·õä" },
        { from: "t", to: "·õè" }, { from: "T", to: "·õè" },
        { from: "b", to: "·õí" }, { from: "B", to: "·õí" },
        { from: "e", to: "·õñ" }, { from: "E", to: "·õñ" },
        { from: "√™", to: "·õñ" }, { from: "√ä", to: "·õñ" },
        { from: "√©", to: "·õñ·õñ" }, { from: "√â", to: "·õñ·õñ" },
        { from: "m", to: "·õó" }, { from: "M", to: "·õó" },
        { from: "l", to: "·õö" }, { from: "L", to: "·õö" },
        { from: "d", to: "·õû" }, { from: "D", to: "·õû" },
        { from: "o", to: "·õü" }, { from: "O", to: "·õü" },
        { from: "√¥", to: "·õü" }, { from: "√î", to: "·õü" },

        { from: "c", to: "·õã" },
    ];

    if (transCode == "hlaholice") return [
        //{ from: "≈°t", to: "‚∞õ" }, { from: "≈†t", to: "‚∞õ" },
        { from: "jo", to: "‚±ñ" }, { from: "Jo", to: "‚∞¶" },
        { from: "ju", to: "‚±ì" }, { from: "Ju", to: "‚∞£" },
        { from: "ch", to: "‚±à" }, { from: "Ch", to: "‚∞ò" },

        { from: "h", to: "‚±à" },

        { from: "dz", to: "‚∞á" },

        { from: "≈•", to: "‚±è" },
        { from: "≈à", to: "‚±Ä" },
        { from: "≈æ", to: "‚∞∂" }, { from: "≈Ω", to: "‚∞Ü" },

        { from: "a", to: "‚∞∞" }, { from: "A", to: "‚∞Ä" },
        { from: "√°", to: "‚∞∞‚∞∞" }, { from: "√Å", to: "‚∞Ä‚∞Ä" },
        { from: "b", to: "‚∞±" }, { from: "B", to: "‚∞Å" },
        { from: "v", to: "‚∞≤" }, { from: "V", to: "‚∞Ç" },
        { from: "g", to: "‚∞≥" }, { from: "G", to: "‚∞É" },
        { from: "d", to: "‚∞¥" }, { from: "D", to: "‚∞Ñ" },
        { from: "e", to: "‚∞µ" }, { from: "E", to: "‚∞Ö" },
        { from: "√©", to: "‚∞µ‚∞µ" }, { from: "√â", to: "‚∞Ö‚∞Ö" },
        { from: "√™", to: "‚∞µ" }, { from: "√ä", to: "‚∞Ö" },
        { from: " í", to: "‚∞Ü" },
        { from: "z", to: "‚∞∏" }, { from: "Z", to: "‚∞à" },
        { from: "i", to: "‚∞π" },{ from: "I", to: "‚∞â" },
        { from: "√≠", to: "‚∞π‚∞π" }, { from: "√ç", to: "‚∞â‚∞â" },
        { from: "pƒõ", to: "‚±Ç‚∞µ" }, { from: "Pƒõ", to: "‚∞í‚∞µ" },
        { from: "y", to: "‚±è‚∞∫" }, { from: "Y", to: "‚∞ü‚∞ä" },
        { from: "√Ω", to: "‚±è‚∞∫‚∞∫" }, { from: "√ù", to: "‚∞ü‚∞ä‚∞ä" },
        { from: "j", to: "‚∞∫" }, { from: "J", to: "‚∞ã" },
        { from: "k", to: "‚∞Ω" }, { from: "K", to: "‚∞ç" },
        { from: "l", to: "‚∞æ" }, { from: "L", to: "‚∞é" },
        { from: "m", to: "‚∞ø" }, { from: "M", to: "‚∞è" },
        { from: "n", to: "‚±Ä" }, { from: "N", to: "‚∞ê" }, { from: "≈ã", to: "‚∞ê" },
        { from: "o", to: "‚±Å" }, { from: "O", to: "‚∞ë" },
        { from: "√≥", to: "‚±Å‚±Å" }, { from: "√ì", to: "‚∞ë‚∞ë" },
        { from: "√¥", to: "‚±Å" }, { from: "√î", to: "‚∞ë" },
        { from: "p", to: "‚±Ç" }, { from: "P", to: "‚∞í" },
        { from: "r", to: "‚±É" }, { from: "R", to: "‚∞ì" },
        { from: "s", to: "‚±Ñ" }, { from: "S", to: "‚∞î" },
        { from: "t", to: "‚±Ö" }, { from: "T", to: "‚∞ï" },
        { from: "u", to: "‚±Ü" }, { from: "U", to: "‚∞ñ" },
        { from: "f", to: "‚±á" }, { from: "F", to: "‚∞ó" },
        { from: "ƒç", to: "‚±ç" }, { from: "ƒå", to: "‚±ç" },
        { from: "c", to: "‚±å" }, { from: "C", to: "‚∞ú" },
        { from: "≈°", to: "‚±é" }, { from: "≈†", to: "‚∞û" },
    ];

    if (transCode == "cyrilice") return [
        { from: "vƒõ", to: "–≤—ò–µ" }, { from: "Vƒõ", to: "–í—ò–µ" },
        { from: "pƒõ", to: "–ø—ò–µ" }, { from: "Pƒõ", to: "–ü—ò–µ" },
        { from: "bƒõ", to: "–±—ò–µ" }, { from: "Bƒõ", to: "–ë—ò–µ" },

        { from: "√°", to: "aa" }, { from: "√Å", to: "–ê–∞" },
        { from: "√©", to: "–µ–µ" }, { from: "√â", to: "–ïe" },
        { from: "√≠", to: "–∏–∏" }, { from: "√ç", to: "–ò–∏" },
        { from: "√≥", to: "–æ–æ" }, { from: "√ì", to: "Oa" },
        { from: "√∫", to: "—É—É" }, { from: "√ö", to: "–ò—É" },
        { from: "ƒ∫", to: "—É—É" }, { from: "ƒπ", to: "–õ–ª" },
        { from: "≈ï", to: "—Ä—Ä" }, { from: "≈î", to: "–†—Ä" },

        { from: "d≈∫", to: "—í" }, { from: "D≈∫", to: "–Ç" },
        { from: "d≈æ", to: "—ü" }, { from: "D≈æ", to: "–è" },

        { from: "ƒá", to: "—õ" }, { from: "D≈æ", to: "–ã" },
        { from: "≈õ", to: "—Å—å" }, //{ from: "D≈æ", to: "–ã" },

        { from: "≈à", to: "—ö" }, { from: "≈á", to: "–ä" },

        { from: "b", to: "–±" }, { from: "B", to: "–ë" },

        { from: "v", to: "–≤" }, { from: "V", to: "–í" },

        { from: "h", to: "–≥" }, { from: "H", to: "–ì" },

        { from: "g", to: "“ë" }, { from: "G", to: "“ê" },

        { from: "d", to: "–¥" }, { from: "D", to: "–î" },

        { from: "je", to: "e" },

        { from: "e", to: "—î" }, { from: "E", to: "–Ñ" },

        { from: "≈æ", to: "–∂" }, { from: "≈Ω", to: "–ñ" },

        { from: "z", to: "–∑" }, { from: "Z", to: "–ó" },

        { from: "y", to: "–∏" }, { from: "Y", to: "–ò" },

        { from: "ji", to: "—ó" },

        { from: "j", to: "–π" }, { from: "J", to: "–ô" },

        { from: "≈°", to: "—à" }, { from: "≈†", to: "–®" },

        { from: "≈°ƒç", to: "—â" }, { from: "≈†ƒç", to: "–©" },

        { from: "ƒç", to: "—á" }, { from: "ƒå", to: "–ß" },

        { from: "c", to: "—Ü" }, { from: "C", to: "–¶" },

        { from: "ch", to: "x" }, { from: "Ch", to: "X" },

        { from: "f", to: "—Ñ" }, { from: "F", to: "–§" },

        { from: "u", to: "—É" }, { from: "U", to: "–£" },

        { from: "t", to: "—Ç" }, { from: "T", to: "–¢" },

        { from: "s", to: "—Å" }, { from: "S", to: "–°" },

        { from: "r", to: "—Ä" }, { from: "R", to: "–†" },

        { from: "p", to: "–ø" }, { from: "P", to: "–ü" },

        { from: "n", to: "–Ω" }, { from: "N", to: "–ù" }, { from: "≈ã", to: "–Ω" },

        { from: "m", to: "–º" }, { from: "M", to: "–ú" },

        { from: "l", to: "–ª" }, { from: "L", to: "–õ" },

        { from: "ƒæ", to: "—ô" }, { from: "ƒΩ", to: "–â" },

        { from: "≈Ç", to: "–ª—å" }, { from: "≈Å", to: "–õ—å" },

        { from: "k", to: "–∫" }, { from: "K", to: "–ö" },

        { from: "k", to: "–∫" }, { from: "K", to: "–ö" },
    ];

    // m√°lo vyskytuj√≠c√≠ se jevy potlaƒçit (v datech moc ne≈ôe≈°en√©)
    if (transCode == "default") return [
        { from: "eÃ£", to: "e" },
        { from: "oÃ£", to: "o" },
        { from: "√≥ÃÅ", to: "√≥" },
        { from: "≈ã", to: "n" },
        { from: "vƒõ", to: "vje" },
        { from: "bƒõ", to: "bje" },
        { from: "pƒõ", to: "pje" },
        { from: "nƒõ", to: "≈àe" },
        { from: "dƒõ", to: "ƒèe" },
        { from: "tƒõ", to: "≈•e" },
    ];

    if (transCode == "none") return [];

    console.log("Unknown code transcription: ", transCode)
    return null;
}